{
  "name": "test-yandex-serverless-container",
  "packageManager": "yarn@3.4.1",
  "type2": "module",
  "engines": {
    "node": "16"
  },
  "scripts": {
    "pre:nvm": "bash -c 'source $HOME/.nvm/nvm.sh && nvm use && '\"$0\"",
    "pre:env": "bash -c 'source ./.env && '\"$0\"",
    "-command": "node --experimental-specifier-resolution=node --no-warnings",
    "command": "node",
    "dev": "yarn pre:nvm 'yarn webhook:reset && yarn nodemon --exec \"yarn command -r ts-node/register\" ./src/main.ts'",
    "dev2": "yarn command --inspect -r ts-node/register ./src/main.ts",
    "handler": "yarn command ./build/handler.js",
    "build": "yarn tsc --build",
    "docker:up": "docker compose up",
    "docker:dev:shell": "docker compose run --rm --service-ports voice-translate-bot sh",
    "docker:build": "docker compose build && yarn docker:image:clear",
    "docker:clear": "docker compose -f ./compose.yml down --rmi all --volumes",
    "docker:image:clear": "docker image rm -f $(docker image ls -aqf dangling=true)",
    "-yc:registry:create": "yarn pre:env 'yc container registry create --name $REGISTRY_NAME'",
    "-yc:registry:configure": "yc container registry configure-docker",
    "-yc:registry:publish": "yarn pre:env 'docker image push $IMAGE_NAME'",
    "-yc:container:create": "yarn pre:env 'yc serverless container create --name $CONTAINER_NAME'",
    "-yc:container:deploy": "yarn pre:env 'yc serverless container revision deploy --container-name $CONTAINER_NAME --image $IMAGE_NAME --cores 1 --memory 1GB --concurrency 1 --execution-timeout 120s --service-account-id $SERVICE_ACCOUNT_ID && yarn webhook:set'",
    "-webhook:set": "yarn pre:env 'yarn telegraf -m setWebhook -t \"$BOT_TOKEN\" -D \"{ \\\"url\\\": \\\"https://$CONTAINER_DOMAIN\\\" }\"'",
    "-webhook:reset": "yarn pre:env 'yarn telegraf -m setWebhook -t \"$BOT_TOKEN\" -D \"{ \\\"url\\\": \\\"\\\" }\"'",
    "ci": "yarn docker:build",
    "cd": "yarn ci && yarn yc:registry:publish && yarn yc:container:deploy",
    "-": "",
    "ssh": "ssh timeweb",
    "purge": "ssh timeweb 'rm -rf /root/ogg-to-mp3-bot'",
    "deploy": "rsync -avz --checksum --exclude=.git --exclude=node_modules --exclude=build --exclude=.yarn/install-state.gz --exclude=.yarn/cache . raspberrypi:~/ogg-to-mp3-bot",
    "deploy2": "rsync -avz --checksum --exclude=.git --exclude=node_modules --exclude=build --exclude=.yarn/cache . timeweb:/root/ogg-to-mp3-bot",
    "logs": "docker compose logs"
  },
  "dependencies": {
    "@ffmpeg/core": "0.11.0",
    "@ffmpeg/ffmpeg": "0.11.6",
    "axios": "1.3.4",
    "cheerio": "1.0.0-rc.12",
    "dotenv": "16.0.3",
    "express": "4.18.2",
    "form-data": "4.0.0",
    "protobufjs": "7.2.2",
    "telegraf": "4.11.2",
    "telegraf-throttler": "0.6.0"
  },
  "devDependencies": {
    "@types/express": "4.17.17",
    "@types/ffmpeg.js": "3.1.3",
    "nodemon": "2.0.20",
    "ts-node": "10.9.1",
    "typescript": "4.9.5"
  },
  "resolutions": {
    "telegraf@4.11.2": "patch:telegraf@npm%3A4.11.2#./.yarn/patches/telegraf-npm-4.11.2-9bfb14dad0.patch"
  }
}
